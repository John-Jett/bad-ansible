[frontends]
#frontend1.a398.example.opentlc.com ansible_ssh_host=frontend1.a398.example.opentlc.com
frontend1.a398.internal #ansible_ssh_host=frontend1.a398.example.opentlc.com

[apps]
#app1.a398.example.opentlc.com ansible_ssh_host=app1.a398.example.opentlc.com
#app2.a398.example.opentlc.com ansible_ssh_host=app2.a398.example.opentlc.com
app1.a398.internal #ansible_ssh_host=app1.a398.example.opentlc.com
app2.a398.internal #ansible_ssh_host=app2.a398.example.opentlc.com

[appdbs]
#appdb1.a398.example.opentlc.com ansible_ssh_host=appdb1.a398.example.opentlc.com
appdb1.a398.internal #ansible_ssh_host=appdb1.a398.example.opentlc.com
[tower]
#localhost ansible_connection=local
tower1.f52c.internal
tower2.f52c.internal
tower3.f52c.internal
#tower2
#tower3

[database]
support1.f52c.internal

[isolated_group_ThreeTierApp]
bastion.a398.example.opentlc.com ansible_user='ec2-user' ansible_ssh_private_key_file='~/.ssh/isolated.pem'

[isolated_group_ThreeTierApp:vars]
controller=tower

[all:vars]
admin_password='R3dh4t1'
become=true

pg_host='support1.f52c.internal'
pg_port='5432'

pg_database='awx'
pg_username='awx'
pg_password='R3dh4t2'
pg_sslmode='prefer'  # set to 'verify-full' for client-side enforced SSL

rabbitmq_username=tower
rabbitmq_password='R3dh4t3'
rabbitmq_cookie=cookiemonster

# Isolated Tower nodes automatically generate an RSA key for authentication;
# To disable this behavior, set this value to false
# isolated_key_generation=true


# SSL-related variables

# If set, this will install a custom CA certificate to the system trust store.
# custom_ca_cert=/path/to/ca.crt

# Certificate and key to install in nginx for the web UI and API
# web_server_ssl_cert=/path/to/tower.cert
# web_server_ssl_key=/path/to/tower.key

# Use SSL for RabbitMQ inter-node communication.  Because RabbitMQ never
# communicates outside the cluster, a private CA and certificates will be
# created, and do not need to be supplied.
# rabbitmq_use_ssl=False

# Server-side SSL settings for PostgreSQL (when we are installing it).
# postgres_use_ssl=False
# postgres_ssl_cert=/path/to/pgsql.crt
# postgres_ssl_key=/path/to/pgsql.key

[GenericExample:vars]

###########################################################################
### Ansible Vars
###########################################################################
timeout=60
ansible_become=yes
ansible_user=ec2-user


[GenericExample:children]
towers
windows
support

[towers]
## These are the towers
tower1.f52c.internal public_host_name=tower1.f52c.example.opentlc.com ssh_host=tower1.f52c.internal
tower2.f52c.internal public_host_name=tower2.f52c.example.opentlc.com ssh_host=tower3.f52c.internal
tower3.f52c.internal public_host_name=tower3.f52c.example.opentlc.com ssh_host=tower2.f52c.internal


[windows]
## These are the activedirectory servers
ad1.f52c.internal ssh_host=ad1.f52c.example.opentlc.com ansible_password=jVMijRwLbI02gFCo2xkjlZ9lxEA7bm7zgg==


## These are the supporthosts
[support]
support1.f52c.internal ssh_host=support1.f52c.internal
support2.f52c.internal ssh_host=support2.f52c.internal

[windows:vars]
ansible_connection=winrm
ansible_user=Administrator
ansible_winrm_server_cert_validation=ignore
ansible_become=false
